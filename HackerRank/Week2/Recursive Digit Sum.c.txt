Recursive Digit Sum.c

#include <stdio.h>
#include <string.h>
long long digitSum(long long num) {
    long long sum = 0;
    while (num > 0) {
        sum += num % 10;
        num /= 10;
    }
    return sum;
}
long long superDigitCalc(long long num) {
    if (num < 10) 
        return num;
    return superDigitCalc(digitSum(num));
}

int main() {
    char n[100001];
    long long k;
    scanf("%s %lld", n, &k);
    long long initialSum = 0;
    for (int i = 0; i < strlen(n); i++) {
        initialSum += n[i] - '0';
    }
    long long totalSum = initialSum * k;
    printf("%lld\n", superDigitCalc(totalSum));

    return 0;
}
